<!DOCTYPE html>
<html lang="en">
	<head>
		 
		<script async src="https://www.googletagmanager.com/gtag/js?id=UA-23296419-22"></script>
		<script>
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js', new Date());
		gtag('config', 'UA-23296419-22');
		</script>
		 

		<title>Linux: how to find and replace text in multiple files - Internal Pointers</title>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<meta name="author" content="Monocasual Laboratories">
		<meta name="description" content="Harness the power of grep and sed.">
		<meta name="keywords" content="Linux,Unix,grep,sed,text">
		<meta name="copyright" content="2015-2024 Monocasual Laboratories">
		<meta name="application-name" content="Internal Pointers">
		<meta name="google-site-verification" content="d6wzhBnnEXNHg7kty5SNXVBKd4e29wUFP69SROd-3eI" />

		<meta property="og:title" content="Linux: how to find and replace text in multiple files" />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://www.internalpointers.com/post/linux-find-and-replace-text-multiple-files" />
<meta property="og:image" content="https://www.internalpointers.com/img/internalpointers-card.png" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="900" />
<meta property="og:site_name" content="Internal Pointers" />
<meta property="og:description" content="Harness the power of grep and sed." />
<meta name="twitter:card" content="summary" />
<meta name="twitter:url" content="https://www.internalpointers.com/post/linux-find-and-replace-text-multiple-files" />
<meta name="twitter:title" content="Linux: how to find and replace text in multiple files" />
<meta name="twitter:description" content="Harness the power of grep and sed." />
<meta name="twitter:image" content="https://www.internalpointers.com/img/internalpointers-card.png" />

		<link rel="icon" href="/img/favicon.ico">
		<link rel="apple-touch-icon-precomposed" href="/img/favicon-152.png">
		<link rel="stylesheet" href="/main-1.4.0.css">

				
		<script defer src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
		<script defer src="//cdnjs.cloudflare.com/ajax/libs/js-cookie/2.2.1/js.cookie.min.js"></script>
		<script defer src="/main-1.4.0.js"></script>

		

	</head>
	<body>
		<div class="ip-follow-us-popup">

    <div class="ip-follow-us-popup__side">
        <img src="/img/facebook-like-thumb.svg" alt="Like it!">
    </div>

    <div class="ip-follow-us-popup__header">
        <p>Join us on Facebook!</p>
    </div>

    <div class="ip-follow-us-popup__body">
        <div class="ip-follow-us-popup__body__ok">
        <img src="/img/facebook-like-thumb.svg" alt="Like it!">
        </div>
    </div>

    <div class="ip-follow-us-popup__footer">
        <div><a href="#" class="ip-follow-us-popup__footer__nope">Nope, thanks anyway.</a></div>
    </div>

</div>		<div class="ip-cookie-banner">
    <div class="ip-container">
        <p>We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. By using our site, you acknowledge that you have read and understand our <a href="{{ url('/privacy/') }}">Privacy Policy</a>, and our <a href="{{ url('/tos/') }}">Terms of Service</a>. Your use of this site is subject to these policies and terms. | <a href="#" class="ip-cookie-banner__close">ok, got it</a></p>
    </div>
</div>		<div class="ip-header">
	<div class="ip-container">
		<div class="ip-header__logo">
			<a href="/">**internal / pointers</a>
		</div>
		<div class="ip-header__links">
			<ul>
				<li><a href="/rss">rss</a></li>
				<li><a href="/about">about</a></li>
			</ul>
		</div>
	</div>
</div>

<div class="ip-sub-header">
</div>
		<div class="ip-body">

	<div class="ip-container">

		<div class="ip-post">

			<div class="ip-post__info">
				<p>— Written by Triangles on August 17, 2019 
								• updated on November 10, 2019  
								• ID 75 —</p>
			</div>

			<div class="ip-post__title">
				<h1>Linux: how to find and replace text in multiple files</h1>
			</div>

			<div class="ip-post__intro">
				<p>Harness the power of grep and sed.</p>
			</div>

			
			<div class="ip-post__body">
				<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- internalpointers responsive -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-1778432007040046"
     data-ad-slot="1269254897"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

<p>Often times I need to search and replace a string of text across multiple files in my Linux box. After a bit of research I've come up with a nice solution. Assuming that you want to search for the string <code>search</code> through multiple files and replace it with <code>replace</code>, this is the one-liner:</p>
<pre><code>grep -RiIl 'search' | xargs sed -i 's/search/replace/g'
</code></pre>
<p>Let me now dissect it and take a quick look at the different tools in use.</p>
<h2><code>grep</code></h2>
<p><code>grep</code> is a utility for searching for strings through multiple text files. Here I'm invoking it with the following parameters:</p>
<ul>
<li><code>R</code> — perform a recursive search, also across symbolic links;</li>
<li><code>i</code> — case-insensitive search</li>
<li><code>I</code> — skip binary files. We are working with text, afer all;</li>
<li><code>l</code> — print results as a simple list of file names. This is needed for the next command.</li>
</ul>
<p>The output of <code>grep</code> is then piped to ...</p>
<h2><code>xargs</code></h2>
<p>This is a little command-line utility that takes what receives in input and passes it <em>as argument</em> to another program. So in this example the output of <code>grep</code> is passed to the next command <code>sed</code> as its argument.</p>
<h2><code>sed</code></h2>
<p><code>sed</code> is a glorious Unix utility that transforms text. In the current snippet I'm using it to replace text with the following parameters:</p>
<ul>
<li><code>i</code> — replace in file. Remove it for a dry run mode;</li>
<li><code>s/search/replace/g</code> — this is the substitution command. The <code>s</code> stands for substitute (i.e. replace), the <code>g</code> instructs the command to replace all occurrences. </li>
</ul>
<h2>Fine tuning 1: how to exclude directories while searching</h2>
<p>You can add the <code>--exclude-dir=&lt;dir&gt;</code> parameter to <code>grep</code> if you want to skip a specific directory while searching for files. For example, say you want to skip the <code>tests/</code> directory:</p>
<pre><code>grep -RiIl --exclude-dir=tests 'search' | xargs sed 's/search/replace/g'
</code></pre>
<p>Exclude multiple directories by wrapping them into curly braces, like so:</p>
<pre><code>grep -RiIl --exclude-dir={dir1,dir2,dir3} 'search' | xargs sed 's/search/replace/g'
</code></pre>
<h2>Fine tuning 2: regular expressions</h2>
<p>Both <code>grep</code> and <code>sed</code> support regular expressions, so you can search with <code>grep</code> given a specific pattern and then replace the text with <code>sed</code> given another one. Take a look at the <a href="http://man7.org/linux/man-pages/man1/grep.1.html">grep manual</a> and the <a href="https://linux.die.net/man/1/sed">sed manual</a> for more information.</p>
<h2>Sources</h2>
<p>StackOverflow - <a href="https://stackoverflow.com/questions/11392478/how-to-replace-a-string-in-multiple-files-in-linux-command-line/20721292">How to replace a string in multiple files in linux command line</a></p>			</div>


			<div class="ip-post__tags">
								<a class="ip-tag" href="/tag/linux">Linux</a>
				 • 								<a class="ip-tag" href="/tag/unix">Unix</a>
				 • 								<a class="ip-tag" href="/tag/grep">grep</a>
				 • 								<a class="ip-tag" href="/tag/sed">sed</a>
				 • 								<a class="ip-tag" href="/tag/text">text</a>
											</div>

			<div class="ip-post__neighbor-posts">
								
							</div>
			
						<div class="ip-post__comments">
				<div class="ip-post__comments__title">
					comments
				</div>
				
								<div class="ip-post__comments__list">
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Sam</span> on 
							<span class="date">September 09, 2019 at 10:10</span>
						</div> 
						<div class="body">Hi,<br />
Thanks for sharing the tips.<br />
I have tried your command but not succeed.<br />
I found that there should be a dot or file path at the end of grep command.<br />
Cheers,<br />
Sam</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Triangles</span> on 
							<span class="date">November 10, 2019 at 15:26</span>
						</div> 
						<div class="body">@Sam you're on macOS, right? The -R flag wants the dot (or file path) at the end of grep command: https://apple.stackexchange.com/questions/275373/how-to-make-grep-work-like-in-ubuntu/275379 . Thanks for the input :)</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">VM</span> on 
							<span class="date">August 04, 2020 at 15:26</span>
						</div> 
						<div class="body">Some infos are wrong here, so its normal that people are not able to use it. In particular :<br />
- "-i" option of grep IGNORE case, and don't make it case sensitive as said in the grep man page :<br />
"-i, --ignore-case<br />
    Ignore case distinctions in both the PATTERN and the input files." (source : https://linux.die.net/man/1/grep)<br />
"-R" option actually follow symbolic links while "-r" don't which deserve to be mentioned. </div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Jill Ackerman</span> on 
							<span class="date">October 12, 2020 at 17:44</span>
						</div> 
						<div class="body">This worked for me...on Git Bash (Windows)..except I would like it to print a list of changed lines to stnd out, it is listing changed files </div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Stephane</span> on 
							<span class="date">November 12, 2020 at 12:25</span>
						</div> 
						<div class="body">Hi, I'm trying to replace the dates in files by the first date in their corresponding files. But I can't figure out how to use the first one to replace the others :-/<br />
Thanks<br />
<br />
The dates correspond to this regex:<br />
<br />
([1-2]\d\d\d:(0[1-9]|1[0-2]):(0[1-9]|[1-2]\d|3[0-1]) (0\d|1\d|2[0-3]):[0-5]\d:[0-5]\d)</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">came in handy</span> on 
							<span class="date">March 17, 2021 at 12:06</span>
						</div> 
						<div class="body">thank you</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Wesley Chen</span> on 
							<span class="date">January 19, 2022 at 00:45</span>
						</div> 
						<div class="body">This post saved my ass. Thanks a lot!</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Aaron</span> on 
							<span class="date">May 20, 2022 at 05:20</span>
						</div> 
						<div class="body">I copied the above replace command(with the line break) into my folder and it automatically executed the place for 'search' to  'replace' and all my files containing 'search' key word were replaced .....</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Ashok Sahu </span> on 
							<span class="date">July 14, 2022 at 13:17</span>
						</div> 
						<div class="body">I am found that  in this scenario if we use bulk data is good <br />
 </div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Manoj</span> on 
							<span class="date">October 27, 2022 at 08:00</span>
						</div> 
						<div class="body">It works for me thanks</div> 
					</div>
										<div class="ip-post__comments__list__comment">
						<div class="info">
							<span class="author">Scott</span> on 
							<span class="date">June 30, 2023 at 12:37</span>
						</div> 
						<div class="body">This is great except if there are spaces in your file names. If you pass a file name with a space in it to xargs, it will be treated as two different files and fail or do something unexpected.<br />
<br />
The solution is to have grep list the file names null-terminated (using --null flag) and have xargs split on null instead of space (using -0 flag, that's a zero).<br />
<br />
Looks like:<br />
<br />
grep -RiIl --null 'search' | xargs -0 sed -i 's/search/replace/g'</div> 
					</div>
									</div>
							</div>
			
			<div class="ip-post__social-tools">
				<div class="ip-post__social-tools__title">
					share!
				</div>
				<div class="ip-post__social-tools__twitter item"></div>
			</div>

		</div>

	</div>

</div>

		<div class="ip-footer">
	<div class="ip-container">
		© 2015-2024 — Monocasual Laboratories — 
		<a href="/tos" rel="nofollow">terms of service</a> — 
		<a href="/privacy" rel="nofollow">privacy policy</a> — 
		<a href="/about">about</a> — 
		<a href="/rss">RSS feed</a>
	</div>
</div>
	</body>
</html>

